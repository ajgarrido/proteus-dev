// Filtros Colores

// grayscale      ex: filter: grayscale(100%);
// sepia          ex: filter: sepia(100%);
// saturate       ex: filter: saturate(0%);
// hue-rotate     ex: filter: hue-rotate(45deg);
// invert         ex: filter: invert(100%);
// brightness     ex: filter: brightness(15%);
// contrast       ex: filter: contrast(200%);
// blur           ex: filter: blur(2px);

@mixin filtro($filter-type,$filter-amount) { 

	$filter:grayscale;

	@if $filter-type==1 {
		$filter : grayscale
	}
	@else if $filter-type==2 {
		$filter : sepia
	}
	@else if $filter-type==3 {
		$filter : saturate
	}
	@else if $filter-type==4 {
		$filter : hue-rotate
	}
	@else if $filter-type==5 {
		$filter : invert
	}
	@else if $filter-type==6 {
		$filter : brightness
	}
	@else if $filter-type==7 {
		$filter : contrast
	}
	@else if $filter-type==8 {
		$filter : blur
	}

	-webkit-filter: $filter + unquote('(#{$filter-amount})');
	-moz-filter: $filter + unquote('(#{$filter-amount})');
	-ms-filter: $filter + unquote('(#{$filter-amount})');
	-o-filter: $filter + unquote('(#{$filter-amount})');
	filter: $filter + unquote('(#{$filter-amount})');

}

// efectos

@mixin apariencia($value){
  -moz-appearance: $value;
  -webkit-appearance: $value;
  appearance: $value;
}

@mixin sombra-texto($horizOffset, $vertOffset, $blur, $color) {
	-webkit-text-shadow: $horizOffset $vertOffset $blur $color;
	-moz-text-shadow: $horizOffset $vertOffset $blur $color;
	-ms-text-shadow: $horizOffset $vertOffset $blur $color; /* IE 10+ */
	-o-text-shadow: $horizOffset $vertOffset $blur $color;
	text-shadow: $horizOffset $vertOffset $blur $color;
}

@mixin redondeado($tl: 5px, $tr: 5px, $bl: 5px, $br: 5px) {
		-webkit-border-radius: $tl $tr $br $bl;
		-moz-border-radius: $tl $tr $br $bl;
		border-radius: $tl $tr $br $bl;
}

@mixin sombra($x: 0px, $y: 3px, $prop: 0px,$blur: 5px, $r:0, $g:0, $b:0, $alpha: 0.5) {
		-webkit-box-shadow: $x $y $blur $prop rgba($r, $g, $b, $alpha);
		-moz-box-shadow: $x $y $blur $prop rgba($r, $g, $b, $alpha);
		box-shadow: $x $y $blur $prop rgba($r, $g, $b, $alpha);
}

@mixin rotar($rotar: 90deg, $escala: 1, $sesgar: 1deg, $traducir: 10px) {
		-webkit-transform: rotate($rotar) scale($escala) skew($sesgar) translate($traducir);
		-moz-transform: rotate($rotar) scale($escala) skew($sesgar) translate($traducir);
		-o-transform: rotate($rotar) scale($escala) skew($sesgar) translate($traducir);
		-ms-transform: rotate($rotar) scale($escala) skew($sesgar) translate($traducir);
		transform: rotate($rotar) scale($escala) skew($sesgar) translate($traducir);
}

@mixin rotarX($rotar: 0deg){
		-webkit-transform: rotateX($rotar);
		-moz-transform: rotateX($rotar);
		-o-transform: rotateX($rotar);
		-ms-transform: rotatX($rotar);
		transform: rotateX($rotar);
}

@mixin rotarY($rotar: 0deg){
		-webkit-transform: rotateY($rotar);
		-moz-transform: rotateY($rotar);
		-o-transform: rotateY($rotar);
		-ms-transform: rotateY($rotar);
		transform: rotateY($rotar);
}

@mixin transicion($elemento: all, $t1: 500ms, $efecto: linear, $t2: 1s) {
		-webkit-transition: $elemento $t1 $efecto $t2;
		-moz-transition: $elemento $t1 $efecto $t2;
		-o-transition: $elemento $t1 $efecto $t2;
		-ms-transition: $elemento $t1 $efecto $t2;
		transition: $elemento $t1 $efecto $t2;
}

@mixin escalar($scale: 10) {
		 -moz-transform: scale($scale);
			 -o-transform: scale($scale);
			-ms-transform: scale($scale);
	-webkit-transform: scale($scale);
					transform: scale($scale);
}

@mixin trans($opacidad) {
		$ieopacidad: $opacidad * 100;
		//-ms-filter: ~"progid:DXImageTransform.Microsoft.Alpha(Opacity=${ieopacidad})"; // IE 8
		-ms-filter: #{'"progid:DXImageTransform.Microsoft.Alpha(Opacity=${ieopacidad})"'};
		filter: #{"alpha(opacity=${ieopacidad})"}; // IE 5-7
		opacity: $opacidad;
}

@mixin opacidad($type, $color, $percentage, $shade: claro) {
	@if $shade == claro {
		@if $type == color {
			color: trans($color, $percentage);
			color: rgba($color, $percentage);
		}
		@if $type == bg {
			background-color: trans($color, $percentage);
			background-color: rgba($color, $percentage);
		}
	}
	@else {
		 @if $type == color {
			color: transd($color, $percentage);
			color: rgba($color, $percentage);
		}
		@if $type == bg {
			background-color: transd($color, $percentage);
			background-color: rgba($color, $percentage);
		}
	}
}

@mixin caja-modelo($box-model) {
	-webkit-box-sizing: $box-model; // Safari <= 5
		 -moz-box-sizing: $box-model; // Firefox <= 19
					box-sizing: $box-model;
}

// posicion contenedor
@mixin posicion($pos: r,$tipo:tl,$v1: 0,$v2: 0,$zindex:0) {
		z-index: $zindex;
		@if $pos==r {
				position: relative;
		}
		@else if $pos==a {
				position: absolute;
		}
		@else if $pos==s {
				position: static;
		}
		@else if $pos==f {
				position: fixed;
		}
		@if $tipo==tl {
				top: $v1;
				left: $v2;
		}
		@else if $tipo==tr {
				top: $v1;
				right: $v2;
		}
		@else if $tipo==bl {
				bottom: $v1;
				left: $v2;
		}
		@else if $tipo==br {
				bottom: $v1;
				right: $v2;
		}
}

// fuentes
@mixin formato($fuente:$fuente1,$grosor: n,$tamano: 14px,$interlineado: normal) {
		@if $grosor==n {
				font-weight: normal;
		}
		@else if $grosor==b {
				font-weight: bold;
		}
		@else if $grosor==i {
				font-style: italic;
		}
		font-family: $fuente;
		font-size: $tamano;
		line-height: $interlineado;
}

// color

/*.color($color: 'null'){

	.color_atributos1 ($color) when (iscolor($color)) {
			 color: $color;
		}

		.color_atributos1($color);
}*/

// fondos
@mixin fondo-color($color) {
		background-color: $color;
}

@mixin fondo-imagen($fondo:'null',$modo: no,$coord-x: 'null',$coord-y: 'null') {
		@if type-of($fondo)==color {
				@debug yep;
		}
		@if $fondo=='null' {
				@debug yep;
		}
		@if $modo==no {
				background-repeat: no-repeat;
		}
		@else if $modo==rx {
				background-repeat: repeat-x;
		}
		@else if $modo==ry {
				background-repeat: repeat-y;
		}
		@else if $modo==rxy {
				background-repeat: repeat;
		}
		@if $coord-x !='null' and $coord-y !='null' {
				background-position: $coord-x $coord-y;
		}
		background-image: url("#{$ruta_imagen+$fondo}");
}

/*@mixin fondo-degrade($direccion: left,$inicio: #ffffff,$fin: #000000) {
		background-color: $inicio;
		background-image: -webkit-linear-gradient($direccion, $inicio, $fin);
		background-image: -moz-linear-gradient($direccion, $inicio, $fin);
		background-image: -o-linear-gradient($direccion, $inicio, $fin);
		background-image: -ms-linear-gradient($direccion, $inicio, $fin);
		background-image: linear-gradient($direccion, $inicio, $fin);
}*/

@mixin fondo-degrade($direccion: left,$inicio: #ffffff 10%,$fin: #000000 20%) {
		background-color: $inicio;
		background-image: -webkit-linear-gradient($direccion, $inicio, $fin);
		background-image: -moz-linear-gradient($direccion, $inicio, $fin);
		background-image: -o-linear-gradient($direccion, $inicio, $fin);
		background-image: -ms-linear-gradient($direccion, $inicio, $fin);
		background-image: linear-gradient($direccion, $inicio, $fin);
		filter: progid:DXImageTransform.Microsoft.gradient( startColorstr=$inicio, endColorstr=$fin,GradientType=0 );
}

@mixin fondo-2x($fondo, $ancho, $alto) {
	@media (min--moz-device-pixel-ratio: 1.3),
				 (-o-min-device-pixel-ratio: 2.6/2),
				 (-webkit-min-device-pixel-ratio: 1.3),
				 (min-device-pixel-ratio: 1.3),
				 (min-resolution: 1.3dppx) {
		/* on retina, use image that's scaled by 2 */
		background-image: url("#{$ruta_imagen+$fondo}");
		background-size: $ancho $alto;
	}
}

@mixin placeholder-color($color){
	&::-webkit-input-placeholder { color: $color; }
	&::-moz-placeholder { color: $color; }
	&::-ms-input-placeholder { color: $color; }
	&::-moz-placeholder { color: $color; }
}

@mixin vendor($property, $value...){
		-webkit-#{$property}:$value;
			 -moz-#{$property}:$value;
				-ms-#{$property}:$value;
				 -o-#{$property}:$value;
						#{$property}:$value;
}

@mixin fondo-tamano($value){
	-o-background-size: $value;
	-webkit-background-size: $value;
	-moz-background-size: $value;
	background-size: $value;
}
/*@mixin icon($margen: .5em, $font: FontAwesome) {
	display: inline-block;
	margin-right: $margen;
	font: normal normal normal 14px/1 $font;
	font-size: inherit;
	text-rendering: auto;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
	transform: translate(0, 0);
}*/

@mixin icon($margen: .5em, $font: FontAwesome) {
	font-family: "Font Awesome 5 Pro";
  -webkit-font-smoothing: antialiased;
	display: inline-block;
	font-style: normal;
	font-variant: normal;
	text-rendering: auto;
	line-height: 1;
	transform: translate(0, 0);
}

@mixin prefix($declarations, $prefixes: ()) {
	@each $property, $value in $declarations {
		@each $prefix in $prefixes {
			#{'-' + $prefix + '-' + $property}: $value;
		}

		// Output standard non-prefixed declaration
		#{$property}: $value;
	}
}

/* Animation */


@mixin animation-name($name) {
  -webkit-animation-name: $name;
  -moz-animation-name: $name;
  -ms-animation-name: $name;
  -o-animation-name: $name;
  animation-name: $name;
}

@mixin animation-duration($name) {
  -webkit-animation-duration: $name;
  -moz-animation-duration: $name;
  -ms-animation-duration: $name;
  -o-animation-duration: $name;
  animation-duration: $name;
}

@mixin animation-timing-function($name) {
  -webkit-animation-timing-function: $name;
  -moz-animation-timing-function: $name;
  -ms-animation-timing-function: $name;
  -o-animation-timing-function: $name;
  animation-timing-function: $name;
}

@mixin animation-iteration-count($name) {
  -webkit-animation-iteration-count: $name;
  -moz-animation-iteration-count: $name;
  -ms-animation-iteration-count: $name;
  -o-animation-iteration-count: $name;
  animation-iteration-count: $name;
}

@mixin animation-direction($name) {
  -webkit-animation-direction: $name;
  -moz-animation-direction: $name;
  -ms-animation-direction: $name;
  -o-animation-direction: $name;
  animation-direction: $name;
}

@mixin animation-delay($name) {
  -webkit-animation-delay: $name;
  -moz-animation-delay: $name;
  -ms-animation-delay: $name;
  -o-animation-delay: $name;
  animation-delay: $name;
}

@mixin animation-play-state($name) {
  -webkit-animation-play-state: $name;
  -moz-animation-play-state: $name;
  -ms-animation-play-state: $name;
  -o-animation-play-state: $name;
  animation-play-state: $name;
}

@mixin animation-fill-mode($name) {
  -webkit-animation-fill-mode: $name;
  -moz-animation-fill-mode: $name;
  -ms-animation-fill-mode: $name;
  -o-animation-fill-mode: $name;
  animation-fill-mode: $name;
}

@mixin animation($animate...) {
	$max: length($animate);
	$animations: '';

	@for $i from 1 through $max {
		$animations: #{$animations + nth($animate, $i)};

		@if $i < $max {
			$animations: #{$animations + ", "};
		}
	}
	-webkit-animation: $animations;
	-moz-animation:    $animations;
	-o-animation:      $animations;
	animation:         $animations;
}

@mixin keyframes($animationName) {
	@-webkit-keyframes #{$animationName} {
		@content;
	}
	@-moz-keyframes #{$animationName} {
		@content;
	}
	@-o-keyframes #{$animationName} {
		@content;
	}
	@keyframes #{$animationName} {
		@content;
	}
}

@mixin content-columns($columnCount, $columnGap: 20px) {
  -webkit-column-count: $columnCount;
     -moz-column-count: $columnCount;
          column-count: $columnCount;
  -webkit-column-gap: $columnGap;
     -moz-column-gap: $columnGap;
          column-gap: $columnGap;
}

@mixin columns-rule($width: 1px, $style: solid, $color: #ff00ff) {
	-webkit-column-rule: $width $style $color; 
		-moz-column-rule: $width $style $color;
				column-rule: $width $style $color;
}

// Browser Prefixes
@mixin transform($transforms) {
	-webkit-transform: $transforms;
	-moz-transform: $transforms;
	-ms-transform: $transforms;
	transform: $transforms;
}

// Rotate
@mixin rotate ($deg) { 
	@include transform(rotate(#{$deg}deg));
}

// Scale
@mixin scale($scale) {
	@include transform(scale($scale));
}

@mixin scaleY($y) {
	@include transform(scaleY($y));
}

@mixin scaleX($x) {
	@include transform(scaleX($x));
}


// Translate
@mixin translate ($x, $y) {
	@include transform(translate($x, $y));
}

// Skew
@mixin skew ($x, $y) {
	@include transform(skew(#{$x}deg, #{$y}deg));
}

// Transform Origin
@mixin transform-origin ($origin) {
	-webkit-transform-origin: $origin;
	-moz-transform-origin: $origin;
	-ms-transform-origin: $origin;
	transform-origin: $origin;
}


// Translate3d 
@mixin translate3d($x, $y, $z) {
  @include transform(translate3d($x, $y, $z));
}

/*@mixin transform(@scale,@rotate) {
  -webkit-transform: @arguments;
	-moz-transform: @arguments;
	-ms-transform: @arguments;
	transform: @arguments;
}*/

/*

.sample {
		font-size: 30rem;

		@include breakpoint(medium) {
				font-size: 22rem;
		}
}


.element {
		font-size: 30rem;
}

@media (min-width: 992px) {
		.element {
				font-size: 22rem;
		}
}

*/